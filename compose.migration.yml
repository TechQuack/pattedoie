services:

  pattedoie:
    build:
      context: .
      dockerfile: PatteDoie/Dockerfile
      target: final
    environment:
        - MSSQL_SA_PASSWORD=${DATABASE_PASSWORD}
        - ASPNETCORE_ENVIRONMENT=Development
        - ASPNETCORE_HTTP_PORTS=8080
        - ASPNETCORE_HTTPS_PORTS=8081
    ports:
        - "8080:8080"
        - "8081:8081"
    volumes:
        - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
        - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
    depends_on:
        migrations-apply:
            condition: service_completed_successfully
        pattedoie-sqlserver:
            condition: service_healthy

  pattedoie-sqlserver:
    container_name: pattedoie-sqlserver
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=${DATABASE_PASSWORD}
    ports:
      - "1433:1433"
    user: root
    volumes:
        - backup_pattedoie:/var/opt/mssql/backups
        - data_pattedoie:/var/opt/mssql/data
        - log_pattedoie:/var/opt/mssql/log
    healthcheck:
        test: timeout 1 bash -c 'cat < /dev/null > /dev/tcp/127.0.0.1/1433'
        interval: 10s
        retries: 10
        start_period: 10s
        timeout: 3s

  migrations-apply:
    container_name: service-migrations-apply
    build:
        context: .
        dockerfile: PatteDoie/DockerfileDatabase
    environment:
        - MSSQL_SA_PASSWORD=${DATABASE_PASSWORD}
    depends_on:
        pattedoie-sqlserver:
            condition: service_healthy
    entrypoint: "dotnet ef database update"
  
volumes:
    backup_pattedoie:
    data_pattedoie:
    log_pattedoie:  